
services:
  frontend:
    build: 
      dockerfile: frontend/Dockerfile
      target: $STAGE
    container_name: frontend
    ports:
      - "3000:3000"
      - "80:80"
    volumes:
      - ./debug/frontend/:/debug
    environment:
      - GID=$USER_GID
      - HTTP_METHOD=${HTTP_METHOD}
      - HOST_NAME=${HOST_NAME}
      - REACT_APP_CLIENT_ID=${CLIENT_ID}
      - REACT_APP_PORT=${REACT_PORT}
      - REACT_APP_REDIRECT_URI=${REDIRECT_URI}
  backend:
    build: 
      dockerfile: backend/Dockerfile
      target: $STAGE
    container_name: backend
    ports:
      - "8000:8000"
    volumes:
      - ./debug/backend/:/debug
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - GID=$USER_GID
      - DJANGO_SUPERUSER_PASSWORD=$DJANGO_PASS
      - DJANGO_SUPERUSER_EMAIL=$DJANGO_EMAIL
      - DJANGO_SUPERUSER_USERNAME=$DJANGO_USERNAME
      - CLIENT_ID=${CLIENT_ID}
      - REACT_PORT=${REACT_PORT}
      - HOST_NAME=${HOST_NAME}
      - HTTP_METHOD=${HTTP_METHOD}
  db:
    build: 
      dockerfile: db/Dockerfile
    container_name: db
    environment:
      - POSTGRES_USER=$DB_USER
      - POSTGRES_PASSWORD=$DB_PASS
      - POSTGRES_DB=$DB_NAME
      - PGDATA=$DB_DATA
    healthcheck:
      test: pg_isready -d app -U user -h db -p 5432
      interval: 5s
      retries: 3
